AWSTemplateFormatVersion: '2010-09-09'
Description: S3-to-Lambda pipeline for processing meter photos

Parameters:
  LambdaS3Key:
    Type: String
    Description: S3 key for the Lambda deployment package (e.g., `lambda/meter-reader.zip`)
  LambdaS3Bucket:
    Type: String
    Description: S3 bucket where the Lambda deployment package is stored

Resources:

  MeterPhotoBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-meter-photos"
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: "s3:ObjectCreated:*"
            Function: !GetAtt MeterProcessorLambda.Arn

  MeterProcessorLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-meter-processor"
      Runtime: python3.12
      Handler: lambda_function.lambda_handler
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaS3Key
      Timeout: 60
      MemorySize: 256
      Environment:
        Variables:
          OPENAI_API_KEY: "<replace-me>"         # Replace in console or use Secrets Manager
          OAUTH_CLIENT_ID: "<replace-me>"
          OAUTH_CLIENT_SECRET: "<replace-me>"
          OAUTH_TOKEN_URL: "<replace-me>"
          METER_API_URL: "<replace-me>"
      Role: !GetAtt LambdaExecutionRole.Arn

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref MeterProcessorLambda
      Action: "lambda:InvokeFunction"
      Principal: "s3.amazonaws.com"
      SourceArn: !GetAtt MeterPhotoBucket.Arn

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-lambda-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                Resource: !Sub "${MeterPhotoBucket.Arn}/*"
              - Effect: "Allow"
                Action:
                  - "secretsmanager:GetSecretValue"
                Resource: "*"  # Restrict to specific secrets in production

Outputs:
  BucketName:
    Value: !Ref MeterPhotoBucket
  LambdaFunctionName:
    Value: !Ref MeterProcessorLambda
