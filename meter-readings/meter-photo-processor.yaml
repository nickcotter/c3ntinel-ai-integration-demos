AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda function to process meter photos from a pre-existing S3 bucket

Parameters:
  LambdaS3Bucket:
    Type: String
    Description: S3 bucket where the Lambda deployment package is stored

  LambdaS3Key:
    Type: String
    Description: Path to the Lambda zip file (e.g., lambda/function.zip)

  PhotoBucketName:
    Type: String
    Description: Name of the existing S3 bucket where photos are uploaded

Resources:

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-lambda-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub "arn:aws:s3:::${PhotoBucketName}/*"
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: "*"

  MeterProcessorLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-meter-processor"
      Runtime: python3.12
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 60
      MemorySize: 256
      Environment:
        Variables:
          OPENAI_API_KEY: "<replace-me>"
          OAUTH_CLIENT_ID: "<replace-me>"
          OAUTH_CLIENT_SECRET: "<replace-me>"
          OAUTH_TOKEN_URL: "<replace-me>"
          METER_API_URL: "<replace-me>"
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaS3Key

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref MeterProcessorLambda
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub "arn:aws:s3:::${PhotoBucketName}"

Outputs:
  LambdaFunctionName:
    Value: !Ref MeterProcessorLambda
    Description: Name of the deployed meter processor Lambda function
